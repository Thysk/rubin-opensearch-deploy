---
# Source: opensearch/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: "rubinobs-opensearch-worker-pdb"
  labels:
    helm.sh/chart: opensearch-2.21.0
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch
    app.kubernetes.io/version: "2.15.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: rubinobs-opensearch-worker
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/instance: opensearch
---
# Source: opensearch/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "rubinobs-opensearch-worker"
  labels:
    helm.sh/chart: opensearch-2.21.0
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch
    app.kubernetes.io/version: "2.15.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: rubinobs-opensearch-worker
  annotations:
---
# Source: opensearch/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rubinobs-opensearch-worker-config
  labels:
    helm.sh/chart: opensearch-2.21.0
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch
    app.kubernetes.io/version: "2.15.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: rubinobs-opensearch-worker
data:
  opensearch.yml: |
    cluster.name: rubinobs-opensearch
    cluster.initial_cluster_manager_nodes: ["rubinobs-opensearch-master-0", "rubinobs-opensearch-master-1", "rubinobs-opensearch-master-2"]
    
    # Bind to all interfaces because we don't know what IP address Docker will assign to us.
    network.host: 0.0.0.0
    
    # Setting network.host to a non-loopback address enables the annoying bootstrap checks. "Single-node" mode disables them again.
    # Implicitly done if ".singleNode" is set to "true".
    # discovery.type: single-node
    
    # Start OpenSearch Security Demo Configuration
    # WARNING: revise all the lines below before you go into production
    plugins:
      security:
        disabled: 'false'
        roles_mapping_resolution: MAPPING_ONLY
        advanced_modules_enabled: 'true'        
    
        ssl:
          transport:
            pemcert_filepath: esnode.pem
            pemkey_filepath: esnode-key.pem
            pemtrustedcas_filepath: root-ca.pem
            enforce_hostname_verification: 'false'
            resolve_hostname: 'true'
    
          http:
            enabled: 'true'
            pemcert_filepath: esnode.pem
            pemkey_filepath: esnode-key.pem
            pemtrustedcas_filepath: root-ca.pem
            clientauth_mode: OPTIONAL
    
        authcz:
          admin_dn:
          - CN=usdf-opensearch.slac.stanford.edu,O=Stanford University,ST=California,C=US,DC=incommon,DC=org
        cache:
          ttl_minutes: '60'
        
        allow_unsafe_democertificates: false
        allow_default_init_securityindex: true
        audit.type: internal_opensearch
        enable_snapshot_restore_privilege: true
        check_snapshot_restore_write_privileges: true
    
        restapi:
          roles_enabled: ["all_access", "security_rest_api_access"]
    
        system_indices:
          enabled: true
          indices:
            [
              ".opendistro-alerting-config",
              ".opendistro-alerting-alert*",
              ".opendistro-anomaly-results*",
              ".opendistro-anomaly-detector*",
              ".opendistro-anomaly-checkpoints",
              ".opendistro-anomaly-detection-state",
              ".opendistro-reports-*",
              ".opendistro-notifications-*",
              ".opendistro-notebooks",
              ".opendistro-asynchronous-search-response*",
            ]
    ######## End OpenSearch Security Demo Configuration ########
---
# Source: opensearch/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "rubinobs-opensearch-worker"
  labels:
    helm.sh/chart: opensearch-2.21.0
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch
    app.kubernetes.io/version: "2.15.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: rubinobs-opensearch-worker
rules:
  - apiGroups:
      - extensions
    resources:
      - podsecuritypolicies
    resourceNames:
      - "rubinobs-opensearch-worker"
    verbs:
      - use
---
# Source: opensearch/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "rubinobs-opensearch-worker"
  labels:
    helm.sh/chart: opensearch-2.21.0
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch
    app.kubernetes.io/version: "2.15.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: rubinobs-opensearch-worker
subjects:
  - kind: ServiceAccount
    name: "rubinobs-opensearch-worker"
    namespace: "default"
roleRef:
  kind: Role
  name: "rubinobs-opensearch-worker"
  apiGroup: rbac.authorization.k8s.io
---
# Source: opensearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: rubinobs-opensearch-worker
  labels:
    helm.sh/chart: opensearch-2.21.0
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch
    app.kubernetes.io/version: "2.15.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: rubinobs-opensearch-worker
  annotations:
    {}
spec:
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  ipFamilies: [IPv4]
  selector:
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
# Source: opensearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: rubinobs-opensearch-worker-headless
  labels:
    helm.sh/chart: opensearch-2.21.0
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch
    app.kubernetes.io/version: "2.15.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: rubinobs-opensearch-worker
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like opensearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
  - name: metrics
    port: 9600
---
# Source: opensearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rubinobs-opensearch-worker
  labels:
    helm.sh/chart: opensearch-2.21.0
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch
    app.kubernetes.io/version: "2.15.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: rubinobs-opensearch-worker
  annotations:
    majorVersion: "2.16.0"
spec:
  serviceName: rubinobs-opensearch-worker-headless
  selector:
    matchLabels:
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/instance: opensearch
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: rubinobs-opensearch-worker
      labels:
        helm.sh/chart: opensearch-2.21.0
        app.kubernetes.io/name: opensearch
        app.kubernetes.io/instance: opensearch
        app.kubernetes.io/version: "2.15.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: rubinobs-opensearch-worker
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: "200Gi"
  template:
    metadata:
      name: "rubinobs-opensearch-worker"
      labels:
        helm.sh/chart: opensearch-2.21.0
        app.kubernetes.io/name: opensearch
        app.kubernetes.io/instance: opensearch
        app.kubernetes.io/version: "2.15.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: rubinobs-opensearch-worker
      annotations:
        configchecksum: 30620ea27ff6cc9ce4742c4d03212b177abe9755413113339476c8c981b1141
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: "rubinobs-opensearch-worker"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - opensearch
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - opensearch
      terminationGracePeriodSeconds: 120
      volumes:
      - name: config
        configMap:
          name: rubinobs-opensearch-worker-config
      - emptyDir: {}
        name: config-emptydir
      - name: hostcert
        secret:
          secretName: usdf-opensearch-hostcert
      - name: hostkey
        secret:
          secretName: usdf-opensearch-hostkey
      - name: root-ca
        secret:
          secretName: usdf-cacert
      enableServiceLinks: true
      initContainers:
      - name: fsgroup-volume
        image: "busybox:latest"
        imagePullPolicy: "IfNotPresent"
        command: ['sh', '-c']
        args:
          - 'chown -R 1000:1000 /usr/share/opensearch/data'
        securityContext:
          runAsUser: 0
        resources:
          {}
        volumeMounts:
          - name: "rubinobs-opensearch-worker"
            mountPath: /usr/share/opensearch/data
      - name: sysctl
        image: "busybox:latest"
        imagePullPolicy: "IfNotPresent"
        command:
        - sh
        - -c
        - |
          set -xe
          DESIRED="262144"
          CURRENT=$(sysctl -n vm.max_map_count)
          if [ "$DESIRED" -gt "$CURRENT" ]; then
            sysctl -w vm.max_map_count=$DESIRED
          fi
        securityContext:
          runAsUser: 0
          privileged: true
        resources:
          {}
      - name: configfile
        image: "opensearchproject/opensearch:2.15.0"
        imagePullPolicy: "IfNotPresent"
        command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash
          cp -r /tmp/configfolder/*  /tmp/config/
        resources:
          {}
        volumeMounts:
          - mountPath: /tmp/config/
            name: config-emptydir
          - name: config
            mountPath: /tmp/configfolder/opensearch.yml
            subPath: opensearch.yml
      containers:
      - name: "opensearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000

        image: "opensearchproject/opensearch:2.15.0"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 5
          tcpSocket:
            port: 9200
          timeoutSeconds: 3
        startupProbe:
          failureThreshold: 30
          initialDelaySeconds: 30
          periodSeconds: 10
          tcpSocket:
            port: 9200
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        - name: metrics
          containerPort: 9600
        resources:
          requests:
            cpu: 100m
            memory: 2Gi
        env:
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: discovery.seed_hosts
          value: "rubinobs-opensearch-master-headless"
        - name: cluster.name
          value: "rubinobs-opensearch"
        - name: network.host
          value: "0.0.0.0"
        - name: OPENSEARCH_JAVA_OPTS
          value: "-Xmx512M -Xms512M"
        - name: node.roles
          value: "ingest,data,search,"
        - name: OPENSEARCH_INITIAL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: usdf-opensearch-admin-pw
        volumeMounts:
        - name: "rubinobs-opensearch-worker"
          mountPath: /usr/share/opensearch/data
        - name: hostcert
          mountPath: /usr/share/opensearch/config/esnode.pem
          subPath: hostcert.pem
        - name: hostkey
          mountPath: /usr/share/opensearch/config/esnode-key.pem
          subPath: hostkey.pem
        - name: root-ca
          mountPath: /usr/share/opensearch/config/root-ca.pem
          subPath: root-ca.pem
        - name: config-emptydir
          mountPath: /usr/share/opensearch/config/opensearch.yml
          subPath: opensearch.yml
